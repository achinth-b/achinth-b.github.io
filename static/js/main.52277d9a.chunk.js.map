{"version":3,"sources":["components/Dimension.js","components/Main.js","components/BlogCards.js","components/Blog.js","components/BlogPosts/GPT4O_IAT.js","App.js","reportWebVitals.js","index.js"],"names":["Listening","props","ref","useRef","useState","hovered","setHover","active","setActive","useFrame","current","rotation","x","y","scale","onClick","e","onPointerOver","onPointerOut","args","color","Dimension","className","position","OrbitControls","screenSpacePanning","require","config","Main","year","Date","title","location","subtitle","href","workVibe","always","footer","getFullYear","menu","style","display","alignItems","justifyContent","height","BlogCards","border","Blog","padding","top","width","GPT4O_IAT","paddingTop","paddingLeft","paddingRight","textAlign","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAqCA,SAASA,EAAUC,GAEjB,IAAMC,EAAMC,mBAEZ,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KAKA,OAHAC,aAAS,WACPP,EAAIQ,QAAQC,SAASC,EAAIV,EAAIQ,QAAQC,SAASE,GAAK,GACpD,IAEC,iDACMZ,GADN,IAEEC,IAAKA,EACLY,MAAOP,EAAS,IAAM,EACtBQ,QAAS,SAACC,GAAD,OAAOR,GAAWD,EAAlB,EACTU,cAAe,SAACD,GAAD,OAAOV,GAAS,EAAhB,EACfY,aAAc,SAACF,GAAD,OAAOV,GAAS,EAAhB,EANhB,UAQE,+BAAea,KAAM,CAAC,EAAG,EAAG,GAAI,OAChC,oCAAoBC,MAAOf,EAAU,UAAY,cAGtD,CA0Bc,SAASgB,IAEpB,OAEI,qBAAKC,UAAU,SAAf,SAIA,eAAC,IAAD,WACE,cAACtB,EAAD,CAAWuB,SAAU,CAAC,EAAG,EAAG,KAC5B,cAACC,EAAA,EAAD,CAAeC,oBAAkB,QAOxC,CAjGHC,EAAQ,IAAUC,SC4HHC,MA3Hf,WAEiB,IACG,IACF,IACE,IAHlB,IAIIC,EAAO,IAAIC,KAGTC,EACJ,qBAAKT,UAAU,QAAf,SAQQ,sBAKJU,EACJ,qBAAKV,UAAU,MAAf,SAAqB,qCAKjBW,EACJ,sBAAKX,UAAU,MAAf,UAAqB,eACN,mBAAGY,KAAO,oBAAV,SAA8B,SAAQ,MAAG,mBAAGA,KAAK,2BAAR,SAAmC,cAAa,KAAE,0BAItGC,EACJ,sBAAKb,UAAU,MAAf,UAAqB,YACV,mBAAGY,KAAO,0GAAV,SAAoH,UAAS,WAAQ,mBAAGA,KAAK,kCAAR,SAA0C,UAAS,WAAQ,mBAAGA,KAAK,oBAAR,SAA4B,WAAU,WAAQ,mBAAGA,KAAK,yBAAR,SAAiC,cAAa,WAAQ,mBAAGA,KAAK,+DAAR,SAAuE,YAAW,YAC9X,0BAICE,EACJ,qBAAKd,UAAU,MAAf,SAAqB,gKAKjBe,EAEJ,sBAAKf,UAAU,MAAf,UAAqB,wCACUO,EAAKS,cAAc,IAAE,OAI/CC,EACL,qBAAKjB,UAAU,OAAf,SAEE,+BACA,6BACI,mBAAGY,KAAK,IAAR,SAAY,aAEd,6BACE,mBAAGA,KAAK,UAAR,SAAkB,cAEpB,6BACE,mBAAGA,KAAK,WAAR,SAAmB,eAGrB,uBAEA,6BACE,mBAAGA,KAAK,mCAAR,SAA2C,iBAE7C,6BACE,mBAAGA,KAAK,+BAAR,SAAuC,eAEzC,6BACE,mBAAGA,KAAK,+BAAR,SAAuC,gBAEzC,6BACE,mBAAGA,KAAK,oDAAR,SAA4D,mBAgBpE,OAEI,sBAAKM,MAVK,CACZC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,SAMN,UAEE,gCAEGb,EAID,cAACV,EAAD,IACCW,EACAC,EACAE,EACAC,EAED,uBAECC,KAEFE,IAIR,EC9FcM,MAlCf,WAEI,OAGI,qBAAKL,MAAO,CAACjB,SAAU,YAAvB,SACK,sBAAKiB,MAAO,CAACM,OAAQ,kBAArB,UAEA,mBAAGZ,KAAK,oBAAR,SAEM,6BAAI,uDAKJ,4BACI,4BACI,4BAAG,sEAe7B,ECyCca,MAxEf,WAGE,IAcMR,EACJ,qBAAKjB,UAAU,OAAf,SAEE,+BACA,6BACI,mBAAGY,KAAK,IAAR,SAAY,aAEd,6BACE,mBAAGA,KAAK,UAAR,SAAkB,cAEpB,6BACE,mBAAGA,KAAK,WAAR,SAAmB,eAGrB,uBAEA,6BACE,mBAAGA,KAAK,mCAAR,SAA2C,iBAE7C,6BACE,mBAAGA,KAAK,+BAAR,SAAuC,eAEzC,6BACE,mBAAGA,KAAK,+BAAR,SAAuC,gBAEzC,6BACE,mBAAGA,KAAK,oDAAR,SAA4D,mBASlE,OACI,sBAAKM,MAAO,CAACC,QAAS,OAAQG,OAAQ,SAAtC,UACI,oBAAIJ,MAAO,CAACQ,QAAS,QAArB,SAA8B,UAK9B,qBAAKR,MAAO,CAACjB,SAAU,WAAY0B,IAAK,MAAOC,MAAO,OAAtD,SAEI,cAAC,EAAD,MAMHX,IAGZ,E,gBCAcY,MArEf,WAEI,OAEI,sBAAKX,MAAO,CAACE,WAAY,UAAzB,UAEI,gCAEI,qBAAIF,MAAO,CAACY,WAAY,OAAQC,YAAa,QAA7C,UAAwD,mDAE5C,0BAKZ,4BAAG,8EAMH,oBAAGb,MAAO,CAACjB,SAAU,WAAY8B,YAAa,MAAOC,aAAc,MAAOC,UAAW,QAArF,UAA8F,2NAK1F,uBAGA,uBACK,4JAKO,4BAAG,WAAU,iSAM7B,oBAAGf,MAAO,CAACjB,SAAU,WAAY8B,YAAa,MAAOC,aAAc,MAAOC,UAAW,QAArF,UAA8F,8DAG1F,+BACI,6BAAI,0BACJ,6BAAI,eACJ,6BAAI,2BAoB3B,ECDcC,MA7Df,WAEE,IAAMjB,EACJ,qBAAKjB,UAAU,OAAf,SAEE,+BACA,6BACI,mBAAGY,KAAK,IAAR,SAAY,aAEd,6BACE,mBAAGA,KAAK,UAAR,SAAkB,cAEpB,6BACE,mBAAGA,KAAK,WAAR,SAAmB,eAGrB,uBAEA,6BACE,mBAAGA,KAAK,mCAAR,SAA2C,iBAE7C,6BACE,mBAAGA,KAAK,+BAAR,SAAuC,eAEzC,6BACE,mBAAGA,KAAK,+BAAR,SAAuC,gBAEzC,6BACE,mBAAGA,KAAK,oDAAR,SAA4D,mBASpE,OAEI,sBAAKZ,UAAU,MAAf,UACE,qBAAKA,UAAU,aAAf,SAEE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmC,KAAO,IAAIC,QAAW,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAM,QAAQC,QAAW,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOD,KAAO,kBAAkBC,QAAW,cAAC,EAAD,aAQlDnB,IAKN,ECtDcoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACT,GAEJ,ECJDQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,G","file":"static/js/main.52277d9a.chunk.js","sourcesContent":["// import * as THREE from \"three\";\nimport React, { useRef, useState } from \"react\";\nimport './dimensions.css'\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\n\nrequire(\"dotenv\").config();\n// let result;\n\n// const bools = async () => {\n//   var data = \"\";\n//   var config = {\n//     method: \"get\",\n//     url: \"https://api.spotify.com/v1/me/player/currently-playing\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\",\n//       Authorization:\n//         \"Bearer BQCSapb5W3vGi867hoJHXOhpR49B9O7AIrAyeNXnfHA5FsGnjSOOaNz99UPmigxSQdm1SpEMqa-eKY_QYh8-ykzDrEZSvKoi8ztTneoGnkd2OuAStFRV9po58ySdaDFhvL0Qxw2W1RDCBHX-ON-IhQ\",\n//     },\n//   };\n\n//   axios(config)\n//     .then(function(response) {\n//       let data = JSON.parse(JSON.stringify(response.data));\n//       result = data;\n//       console.log(data[\"is_playing\"]);\n//       return data[\"is_playing\"];\n//     })\n//     .catch(function(error) {\n//       console.log(error);\n//       return false;\n//     });\n// };\n\n// let amIListening = bools();\n\nfunction Listening(props) {\n  // This reference will give us direct access to the mesh\n  const ref = useRef();\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(false);\n  // Rotate mesh every frame, this is outside of React without overhead\n  useFrame(() => {\n    ref.current.rotation.x = ref.current.rotation.y += 0.01;\n  });\n  return (\n    <mesh\n      {...props}\n      ref={ref}\n      scale={active ? 1.5 : 1}\n      onClick={(e) => setActive(!active)}\n      onPointerOver={(e) => setHover(true)}\n      onPointerOut={(e) => setHover(false)}\n    >\n      <torusGeometry args={[2, 1, 64, 200]} />\n      <meshNormalMaterial color={hovered ? \"hotpink\" : \"orange\"} />\n    </mesh>\n  );\n}\n\nfunction NotListening(props) {\n  const ref = useRef();\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(false);\n  // Rotate mesh every frame, this is outside of React without overhead\n  // useFrame(() => {\n  //   ref.current.rotation.x = ref.current.rotation.y += 0.01\n  // })\n  return (\n    <mesh\n      {...props}\n      ref={ref}\n      scale={active ? 1.5 : 1}\n      onClick={(e) => setActive(!active)}\n      onPointerOver={(e) => setHover(true)}\n      onPointerOut={(e) => setHover(false)}\n    >\n      <torusGeometry args={[4, 2, 128, 400]} />\n      <meshStandardMaterial color={hovered ? \"indianred\" : \"green\"} />\n    </mesh>\n  );\n}\n\nexport default function Dimension() {\n  \n    return (\n\n        <div className=\"canvas\">\n\n        \n    \n        <Canvas >\n          <Listening position={[0, 0, 0]} />\n          <OrbitControls screenSpacePanning />\n        </Canvas>\n\n        </div>\n       \n      \n    );\n  }\n\n","import React from \"react\";\nimport \"./../App.css\";\nimport { FaLinkedin, FaEnvelope, FaGithub} from \"react-icons/fa\";\nimport {SiSubstack} from \"react-icons/si\";\nimport Dimension from \"./Dimension\";\nimport {BrowserRouter, Routes, Route} from \"react-router-dom\"\n\nfunction Main() {\n  \n  const email = <FaEnvelope className=\"icon\" />;\n  const linkedin = <FaLinkedin className=\"icon\" />;\n  const github = <FaGithub className=\"icon\" />;\n  const substack = <SiSubstack className=\"icon\" />;\n  let year = new Date();\n\n  \n  const title = (\n    <div className=\"title\">\n      {/* <Typewriter\n        options={{\n          strings: [\"achinth bharadwaj\", \"@bigdaddytwochinz\"],\n          autoStart: true,\n          cursor: \"\",\n          loop: true,\n        }}\n      /> */}\n      achinth bharadwaj\n    </div>\n  );\n\n  const location = (\n    <div className=\"sub\">\n      üìç nyc / vancouver, bc\n    </div>\n  )\n\n  const subtitle = (\n    <div className=\"sub\">\n       cs + stats  <a href = \"https://cs.ubc.ca\">@ubc</a> / <a href='https://www.palantir.com'>@palantir</a>  <br />\n    </div>\n  );\n\n  const workVibe = (\n    <div className=\"sub\">\n      research <a href = \"https://www.cs.ubc.ca/students/undergrad/research-and-conferences/undergraduate-student-research-awards\">@ubc </a> s'23 / <a href='https://about.facebook.com/meta'>@meta</a> s'22 / <a href='https://tesla.com'>@tesla</a> f'21 / <a href='https://covalenthq.com'>@covalent</a> s'21 / <a href='https://www.boeing.ca/boeing-in-canada/boeing-vancouver.page'>@boeing</a> w & s'20\n       <br />\n    </div>\n  );\n\n  const always =  (\n    <div className=\"sub\">\n      here to research algorithmic fairness by reassessing our canonical assumptions, machine learning, engineering, but distracted by the ultimate and politics.\n    </div>\n  );\n\n  const footer = (\n    \n    <div className=\"sub\">\n          made with üíñ, achinth ¬© {year.getFullYear()}.{\" \"}\n        </div>\n  )\n\n   const menu = (\n    <div className=\"menu\">\n\n      <ul>\n      <li>\n          <a href=\"/\"> home </a>\n        </li>\n        <li>\n          <a href=\"#/posts\"> posts </a>\n        </li>\n        <li>\n          <a href=\"#/papers\"> papers </a>\n        </li>\n        \n        <br/>\n        \n        <li>\n          <a href=\"https://linkedin.com/in/-achinth\"> linkedin </a>\n        </li>\n        <li>\n          <a href=\"https://github.com/achinth-b\"> github </a>\n        </li>\n        <li>\n          <a href=\"https://x.com/bigdaddy2chinz\"> twitter </a>\n        </li>\n        <li>\n          <a href=\"mailto:achinth@student.ubc.ca?subject=Hi Achinth!\"> email </a>\n        </li>\n      </ul>\n\n    </div>\n  )\n\n\n  const style = {\n    display: \"flex\",\n    alignItems: \"center\", \n    justifyContent: 'center',\n    height: '100vh'\n\n  }\n\n  return (\n    \n      <div style={style}>\n      \n        <div>         \n      \n          {title}\n          \n\n          \n          <Dimension />\n          {location}\n          {subtitle}\n          {workVibe}\n          {always}\n\n          <br />\n    \n          {footer}\n        </div>\n        {menu}\n      </div>\n    \n  );\n}\n\nexport default Main;\n","function BlogCards() {\n\n    return(\n\n        \n        <div style={{position: 'relative'}} >\n             <div style={{border: '1px solid grey'}}>\n\n             <a href='#/posts/GPT4o_IAT'>\n                   \n                   <h4>\n                       I made GPT-4o take the implicit association test\n                   </h4>\n                   </a>\n\n                   <p>\n                       <i>\n                           <b>\n                           Can GPT be benchmarked on a human test for implicit bias? \n\n                           </b>\n                       </i>\n                   </p>\n                   \n                        \n            </div>\n            \n                </div>\n\n                \n\n    )\n}\n\nexport default BlogCards\n","import BlogCards from './BlogCards'\nfunction Blog() {\n\n\n  const style = {\n    display: \"flex\",\n    padding: '5%',\n    height: '100vh',\n    position: 'relative',\n\n  }\n\n  const post = {\n    position: 'absolute',\n    left: '0',\n    top: '0'\n  }\n\n  const menu = (\n    <div className=\"menu\">\n\n      <ul>\n      <li>\n          <a href=\"/\"> home </a>\n        </li>\n        <li>\n          <a href=\"#/posts\"> posts </a>\n        </li>\n        <li>\n          <a href=\"#/papers\"> papers </a>\n        </li>\n        \n        <br/>\n        \n        <li>\n          <a href=\"https://linkedin.com/in/-achinth\"> linkedin </a>\n        </li>\n        <li>\n          <a href=\"https://github.com/achinth-b\"> github </a>\n        </li>\n        <li>\n          <a href=\"https://x.com/bigdaddy2chinz\"> twitter </a>\n        </li>\n        <li>\n          <a href=\"mailto:achinth@student.ubc.ca?subject=Hi Achinth!\"> email </a>\n        </li>\n      </ul>\n\n    </div>\n  )\n\n\n\n    return (\n        <div style={{display: 'flex', height: \"100vh\"}}>\n            <h1 style={{padding: '2.5%'}}> \n                posts\n            </h1>\n\n\n            <div style={{position: 'relative', top: '20%', width: '55%'}}>\n\n                <BlogCards/>\n\n                \n            </div>\n            \n                 \n            {menu}\n        </div>        \n    )\n}\n\nexport default Blog\n\n\n\n\n","\n\nfunction GPT4O_IAT() {\n\n    return(\n\n        <div style={{alignItems: 'center'}}>\n\n            <div>\n\n                <h3 style={{paddingTop: '2.5%', paddingLeft: '2.5%', }}>\n                            I made GPT-4o take the implicit association test\n                            <br/>\n                            \n\n                </h3>\n\n                <i> Can GPT-4o be benchmarked for implicit bias the same way humans are? </i>\n            </div>\n\n\n            \n\n                <p style={{position: \"relative\", paddingLeft: '10%', paddingRight: '10%', textAlign: 'left'}}>\n                    The thought was simple - the hype around LLMs these days is stemmed from their ability to \n                    communicate and have a conversation with the user agent, in the exact same way that humans \n                    have conversations with each other. \n\n                    <br>\n                    </br>\n\n                    <br>\n                    </br>\n\n                   If I am to be more formalist about it:\n\n                    It's become extremely difficult to apply bias measures to the underlying embeddings because they have \n                    become just <i> that </i> big and difficult to visualize. Since the value of a large language model \n                    stems from its usabilty just as much as it stems from its underlying mathematics, it seems fitting that \n                    it should be tested for implicit bias, along the same methods that we use with language to test a human. \n\n                </p>\n\n                <p style={{position: \"relative\", paddingLeft: '10%', paddingRight: '10%', textAlign: 'left'}}>\n\n                    There are six tests that I am most excited about; they are: \n                    <ul>\n                        <li>gender - science IAT </li>\n                        <li> Race IAT </li>\n                        <li> Skin-tone IAT</li>\n\n                    </ul>\n\n\n                </p>\n            \n\n            \n\n\n                        \n\n                    \n\n                    \n\n            </div>\n\n    )\n}\n\nexport default GPT4O_IAT\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/Main\"\nimport Blog from \"./components/Blog\";\nimport {HashRouter, Routes, Route} from \"react-router-dom\"\nimport GPT4O_IAT from \"./components/BlogPosts/GPT4O_IAT\";\n\nfunction App() {\n\n  const menu = (\n    <div className=\"menu\">\n\n      <ul>\n      <li>\n          <a href=\"/\"> home </a>\n        </li>\n        <li>\n          <a href=\"#/posts\"> posts </a>\n        </li>\n        <li>\n          <a href=\"#/papers\"> papers </a>\n        </li>\n        \n        <br/>\n        \n        <li>\n          <a href=\"https://linkedin.com/in/-achinth\"> linkedin </a>\n        </li>\n        <li>\n          <a href=\"https://github.com/achinth-b\"> github </a>\n        </li>\n        <li>\n          <a href=\"https://x.com/bigdaddy2chinz\"> twitter </a>\n        </li>\n        <li>\n          <a href=\"mailto:achinth@student.ubc.ca?subject=Hi Achinth!\"> email </a>\n        </li>\n      </ul>\n\n    </div>\n  )\n\n\n  \n  return (\n    \n      <div className=\"App\">\n        <div className=\"App-header\">\n          \n          <HashRouter>\n            <Routes>\n              <Route path = \"/\" element = {<Main/>} />\n              <Route path ='posts' element = {<Blog/>}/>\n              <Route path = 'posts/GPT4o_IAT' element = {<GPT4O_IAT />}/> \n                \n                \n            </Routes>\n          </HashRouter>\n         \n        </div>\n\n      {menu}\n        \n      </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}